/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */
import express from "express"
import bodyParser from "body-parser"
import router from "./routes"
import { 
    initServiceOptions,
    SecurityScheme
} from "./types"

export const app: express.Application & { initService: (option: initServiceOptions<SecurityScheme>) => void } = express() as any

app.initService = (options) => {
    app.use(bodyParser.json())
    app.use(bodyParser.urlencoded({ extended: false }))

    /*
     * Routes
     */
    app.use("/", router(options))

    // catch 404
    app.use((req, res, _next) => {
        console.error(`Error 404 on ${req.url}.`)
        res.status(404).send({ status: 404, error: "Not found" })
    })

    // default error handler
    const defaultErrorHandler: express.ErrorRequestHandler = (err, req, res, _next) => {
        const status = err.status || 500
        const message = err.error || err.message
        const error = err.name || "Error"
        console.error(
            `${error} ${status} "${message}" on ${req.method} ${req.url}.`
        )
        res.status(status).send({ error, message })
    }

    if (options.errorHandler)
        app.use(options.errorHandler)
    else
        app.use(defaultErrorHandler)
}