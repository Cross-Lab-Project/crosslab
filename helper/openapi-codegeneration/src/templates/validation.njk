{%- macro generateValidation(function) -%}
export function {{ function.validateInput }}(
{%- if function.parameters %}
    parameters: {
    {% for location in ["cookie","query","header","path"] -%}
    {% if function.parameters[location] and function.parameters[location].length > 0 -%}
        {{ "\t" + location }}: {
        {% for parameter in function.parameters[location] -%}
            {{ "\t" + parameter.name }}: {{ parameter.schema.typeDeclaration }}
        {% endfor -%} 
        }
    {% endif -%}
    {% endfor -%}
    }
{%- endif -%}
{{- ", " if function.parameters and function.body}}
{%- if function.body %}
    body: {{ function.body.content[0].schema.typeDeclaration | safe | indent }}{{ "\n" }}
{%- elif function.parameters or function.body -%}
    {{ "\n" }}
{%- endif -%}
): boolean {
{%- if function.parameters %}
    if (parameters) {
    {% for location in ["cookie","query","header","path"] -%}
    {% if function.parameters[location] and function.parameters[location].length > 0 -%}
        {{ "\t" -}} if (parameters.{{location}}) {
        {% for parameter in function.parameters[location] -%}
        {% if parameter.required -%}
            {{ "\t" -}} if (!{{ parameter.schema.validationFunction }}(parameters.{{ location }}.{{ parameter.name }})) return false
        {% else -%}
            {{ "\t" -}} if (parameters.{{ location }}.{{ parameter.name }}) {
                if (!{{ parameter.schema.validationFunction }}(parameters.{{ location }}.{{ parameter.name }})) return false
            }
        {% endif -%}
        {% endfor -%}
        }
    {% endif -%}
    {% endfor -%}
    }
    {% endif %}
    {% if function.body -%}
    if (body) {
        if (!{{ function.body.content[0].schema.validationFunction }}(body)) return false
    }
    {% endif -%}
    {{ "\n\t" if function.body -}}
    return true
}

export function {{ function.validateOutput }}(
    response: {
        status: number, 
        body?: any
    }
): boolean {
    if (response.status < 100 || response.status >= 600) return false

    {% if function.responses != undefined -%}
    {% for response in function.responses -%}
    {% if not response.status.endsWith("XX") -%}
    if (response.status == {{ response.status }}) {
        {% if response.content[0].schema.validationFunction -%}
        return {{ response.content[0].schema.validationFunction }}(response.body)
        {%- else -%}
        return true
        {%- endif %}
    }
    {% endif -%}
    {% endfor -%}
    {% endif -%}
    {% for response in function.responses -%}
    {% if response.status == "1XX" -%}
    if (response.status >= 100 && response.status < 200) {
        {{ "return " + response.validationFunction + "(response.body)" if response.validationFunction else "return true"}}
    }
    {% elif response.status == "2XX" -%}
    if (response.status >= 200 && response.status < 300) {
        {{ "return " + response.validationFunction + "(response.body)" if response.validationFunction else "return true"}}
    }
    {% elif response.status == "3XX" -%}
    if (response.status >= 300 && response.status < 400) {
        {{ "return " + response.validationFunction + "(response.body)" if response.validationFunction else "return true"}}
    }
    {% elif response.status == "4XX" -%}
    if (response.status >= 400 && response.status < 500) {
        {{ "return " + response.validationFunction + "(response.body)" if response.validationFunction else "return true"}}
    }
    {% elif response.status == "5XX" -%}
    if (response.status >= 500 && response.status < 600) {
        {{ "return " + response.validationFunction + "(response.body)" if response.validationFunction else "return true"}}
    }
    {% endif -%}
    {% endfor %}
    return false
}
{% endmacro -%}

/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */
import {
    {{ typeDependencies | join(",\n\t") }}
} from "../types"
import {
    {{ validationDependencies | join(",\n\t") }}
} from "./validation"

{% for function in functions -%}
{{ generateValidation(function) }}
{% endfor -%}