{%- macro formatDeclaration(td) -%}
{{ td | replace("{\n", "{ ") | replace("\n}", " }") | replace("\n\t", ", ") | replace("\n", " ") | replace("\t", " ") | replace(r/( )+/g, " ") | replace(r/(, })+/g, " }") | safe }}
{%- endmacro -%}

{%- macro parametersTypeDeclaration(parameters,print_location=true,locations=["cookie","header","path","query"]) -%}
{%- set topdeclaration = "{ " -%}
{%- for location in locations -%}
    {%- if parameters[location] and parameters[location].length > 0 -%}
        {%- if print_location -%}
            {%- set topdeclaration = topdeclaration + location + ": { " -%}
        {%- endif -%}
        {%- set declaration = "" -%}
        {%- for parameter in parameters[location] -%}
            {%- set declaration = declaration + parameter.name + (": " if parameter.required else "?: ") + formatDeclaration(parameter.schema.typeDeclaration) + ", " -%}
        {%- endfor -%}
        {%- set declaration = declaration | reverse | replace(" ,", "") | reverse -%}
        {%- set topdeclaration = topdeclaration + declaration -%}
        {%- if print_location -%}
            {%- set topdeclaration = topdeclaration + " }" -%}
        {%- endif -%}
        {%- set topdeclaration = topdeclaration + ", " -%}
    {%- endif -%}
{%- endfor -%}
{%- set topdeclaration = topdeclaration + " }" -%}
{{- topdeclaration | replace(r/(,  })/g, " }") | safe -}}
{%- endmacro -%}

{%- macro generateInterfaces(function) -%}
{%- if function.parameters %}
export type {{ function.name }}ParametersType = {{ parametersTypeDeclaration(function.parameters, false) }}
{%- else %}
export type {{ function.name }}ParametersType = undefined
{%- endif %}
{%- if function.body.content[0].schema.typeDeclaration %}
export type {{ function.name }}BodyType = {{ formatDeclaration(function.body.content[0].schema.typeDeclaration) }}
{%- else %}
export type {{ function.name }}BodyType = undefined
{%- endif %}
{% set responseTypes = "" -%}
{% for response in function.responses -%}
{% set responseTypes = responseTypes  + " | " + function.name + "Response" + response.status -%}
interface {{ function.name }}Response{{ response.status }} {
{%- if response.status.endsWith("XX") %}
    status: {{ function.genericResponseStatuses[response.status] | join(" | ") }}
{%- else %}
    status: {{ response.status }}
{%- endif %}
{%- if response.content and response.content[0] and response.content[0].schema %}
    body: {{ response.content[0].schema.typeDeclaration | safe }}
{%- else %}
    body?: any
{%- endif %}
}
{% endfor -%}
{%- if responseTypes.length > 0 -%}
export type {{ function.name }}ResponseType = {{ responseTypes.slice(3) }}
{%- else -%}
export type {{ function.name }}ResponseType = {
    status: number,
    body?: any
}
{%- endif %}
{%- endmacro -%}