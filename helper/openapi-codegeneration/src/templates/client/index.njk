{%- import "../general/utils.njk" as utils -%}

{%- macro generateFunction(function) -%}
    public async {{ function.name }}(
    {{- 
    ("parameters: " + function.name + "ParametersType" if function.parameters) + 
    (", " if function.parameters and function.body.content[0].schema.typeDeclaration) +
    ("body: " + function.name + "BodyType" if function.body.content[0].schema.typeDeclaration)
    -}}
    ): Promise<{{ function.name }}ResponseType | FetchError> {
        return this.{{ function.basePath }}Client.{{ function.name }}(
        {{- 
        ("parameters" if function.parameters) + 
        (", " if function.parameters and function.body.content[0].schema.typeDeclaration) +
        ("body" if function.body.content[0].schema.typeDeclaration)
        -}}
        )
    }
{%- endmacro -%}

/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */

import { FetchError } from "./types"
{%- for basePath in basePaths %}

import { {{ basePath | capitalize }}Client } from "./api/{{ basePath }}"
import {
{%- for function in functions %}
    {%- if function.basePath == basePath %}
    {%- if function.parameters %}
    {{ function.name + "ParametersType," }}
    {%- endif %}
    {%- if function.body.content[0].schema.typeDeclaration %}
    {{ function.name + "BodyType," }}
    {%- endif %}
    {{ function.name + "ResponseType," }}
    {%- endif %}
{%- endfor %}
} from "./signatures/{{ basePath }}"
{%- endfor %}

export * as Types from "./types"
{%- for basePath in basePaths %}
export * as Signatures{{ basePath | capitalize }} from "./signatures/{{ basePath }}"
{%- endfor %}

export class APIClient {
    protected _baseURL: string
    protected _accessToken: string | undefined = undefined
    
    {%- for basePath in basePaths %}
    protected {{ basePath }}Client: {{ basePath | capitalize }}Client
    {%- endfor %}
    
    constructor(baseURL: string) {
        this._baseURL = baseURL
        {%- for basePath in basePaths %}
        this.{{ basePath }}Client = new {{ basePath | capitalize }}Client(baseURL)
        {%- endfor %}
    }

    public set baseURL(baseURL: string) {
        this._baseURL = baseURL
        {%- for basePath in basePaths %}
        this.{{ basePath }}Client.baseURL = baseURL
        {%- endfor %}
    }

    public get baseURL() {
        return this._baseURL
    }

    public set accessToken(accessToken: string) {
        this._accessToken = accessToken
        {%- for basePath in basePaths %}
        this.{{ basePath }}Client.accessToken = accessToken
        {%- endfor %}
    } 

{%- for function in functions %}

    {{ generateFunction(function) }}
{%- endfor %}
}