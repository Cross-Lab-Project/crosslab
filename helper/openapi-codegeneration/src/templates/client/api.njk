{%- import "../general/utils.njk" as utils -%}

{%- macro generateFunction(function) -%}
{{ "\t" }}public async {{ function.name }}(
    {{- 
    ("parameters: " + function.name + "ParametersType" if function.parameters) + 
    (", " if function.parameters and function.body.content[0].schema.typeDeclaration) +
    ("body: " + function.name + "BodyType" if function.body.content[0].schema.typeDeclaration)
    -}}
    ): Promise<{{ function.name }}ResponseType | FetchError> {
        return fetch<
            {{- utils.parametersTypeDeclaration(function.parameters, false) if function.parameters else "undefined" }},
            {{- utils.formatDeclaration(function.body.content[0].schema.typeDeclaration) if function.body.content[0].schema.typeDeclaration else "undefined" }},
            {{- function.name }}ResponseType>(
            this._baseURL + `{{ function.path | replace(r/{(.*?)}/g, "$${parameters.$1}") }}`, 
            "{{ function.method }}", 
            {{ "parameters" if function.parameters else "undefined" }}, 
            {{ "body" if function.body.content[0].schema.typeDeclaration else "undefined" }}, 
            {{ function.validateInput }}, 
            {{ function.validateOutput }}
        )
    }
{%- endmacro -%}

/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */
import { fetch } from "../fetch"
import {
    FetchError,
{{ typeDependencies | join(",\n\t") -}}
} from "../types"
import {
    {{ validationDependencies | join(",\n\t") }}
} from "../validation/{{ basePath }}"
import {
{%- for function in functions %}
    {%- if function.parameters %}
    {{ function.name + "ParametersType," }}
    {%- endif %}
    {%- if function.body.content[0].schema.typeDeclaration %}
    {{ function.name + "BodyType," }}
    {%- endif %}
    {{ function.name + "ResponseType," }}
{%- endfor %}
} from "../signatures/{{ basePath }}"

export class {{ basePath | capitalize }}Client {
    protected _baseURL: string
    protected _accessToken: string | undefined = undefined

    constructor(baseURL: string) {
        this._baseURL = baseURL
    }

    public set baseURL(baseURL: string) {
        this._baseURL = baseURL
    }

    public get baseURL() {
        return this._baseURL
    }

    public set accessToken(accessToken: string) {
        this._accessToken = accessToken
    } 
{% for function in functions -%}
    {{ "\n" }}{{ generateFunction(function) }}
{% endfor -%}
}