/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */

export type UserType = {
    url: string,
    username: string,
    scopes: string[]
}

export type HttpMethods = "get" | "post" | "patch" | "head" | "options" | "trace" | "delete" | "put"

export class FetchError implements Error {
    public name: string = "FetchError"
    public message: string

    constructor(message?: string) {
        this.message = message ? message : "An error occurred during fetch"
    }
}

export interface ResponseData {
    status: number,
    headers?: {
        [key: string]: string | undefined
    },
    body?: any
}

export async function parseResponse(response: Response): Promise<ResponseData> {
    let text = null
    try {
        text = await response.text()
        const json = JSON.parse(text)
        return { status: response.status, body: json }
    } catch {
        return { status: response.status, body: text }
    }
}

{{ pregeneratedTypes | safe }}