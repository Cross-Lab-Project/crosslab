/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */
import express from "express"
import bodyParser from "body-parser"
{% for route in routes -%}
import {{ route }} from "./routes/{{ route }}"
{% endfor -%}
import { initServiceOptions } from "./types"

export const app: express.Application & { initService: (option: initServiceOptions) => void } = express() as any

app.initService = (options) => {

    app.use(bodyParser.json())
    app.use(bodyParser.urlencoded({ extended: false }))

    /*
     * Routes
     */
    {% for route in routes -%}
    app.use("/{{ route }}", {{ route }}(options))
    {% endfor %}
    // catch 404
    app.use((req, res, _next) => {
        console.error(`Error 404 on ${req.url}.`)
        res.status(404).send({ status: 404, error: "Not found" })
    })

    // catch errors
    const errorHandling: express.ErrorRequestHandler = (err, req, res, _next) => {
        const status = err.status || 500
        const msg = err.error || err.message
        console.error(
            `Error ${status} (${msg}) on ${req.method} ${req.url} with payload ${req.body}.`
        )
        res.status(status).send({ status, error: msg })
    }
    app.use(errorHandling)
}