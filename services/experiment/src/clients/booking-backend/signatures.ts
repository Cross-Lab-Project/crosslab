/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */

/* eslint-disable @typescript-eslint/no-unused-vars */

/* eslint-disable @typescript-eslint/ban-ts-comment */
import * as Types from './types.js';
// @ts-ignore
import { type Require } from './types.js';

/**
 * Typing for the parameters of the request made by lockBooking()
 * @category lockBooking()
 */
export type LockBookingParameters = {
  ID: string;
};

/**
 * Typing for all possible responses to the request made by lockBooking()
 * @category lockBooking()
 */
export type LockBookingResponse = LockBookingSuccessResponse | LockBookingErrorResponse;

/**
 * Typing for all successful responses to the request made by lockBooking()
 * @category lockBooking()
 */
export type LockBookingSuccessResponse = LockBookingResponse200;

/**
 * Typing for all error responses to the request made by lockBooking()
 * @category lockBooking()
 */
export type LockBookingErrorResponse =
  | LockBookingResponse401
  | LockBookingResponse403
  | LockBookingResponse404
  | LockBookingResponse412
  | LockBookingResponse500
  | LockBookingResponse503;

/**
 * Typing for a response with status 200 to the request made by lockBooking()
 * @category lockBooking()
 */
export interface LockBookingResponse200 extends Types.SuccessResponse {
  status: 200;
  headers?: {
    [k: string]: string | undefined;
  };
  body: {
    Requested: string;
    Selected: string;
    [k: string]: unknown;
  }[];
}

/**
 * Typing for a response with status 401 to the request made by lockBooking()
 * @category lockBooking()
 */
export interface LockBookingResponse401 extends Types.ErrorResponse {
  status: 401;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 403 to the request made by lockBooking()
 * @category lockBooking()
 */
export interface LockBookingResponse403 extends Types.ErrorResponse {
  status: 403;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 404 to the request made by lockBooking()
 * @category lockBooking()
 */
export interface LockBookingResponse404 extends Types.ErrorResponse {
  status: 404;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 412 to the request made by lockBooking()
 * @category lockBooking()
 */
export interface LockBookingResponse412 extends Types.ErrorResponse {
  status: 412;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 500 to the request made by lockBooking()
 * @category lockBooking()
 */
export interface LockBookingResponse500 extends Types.ErrorResponse {
  status: 500;
  headers?: {
    [k: string]: string | undefined;
  };
  body: string;
}

/**
 * Typing for a response with status 503 to the request made by lockBooking()
 * @category lockBooking()
 */
export interface LockBookingResponse503 extends Types.ErrorResponse {
  status: 503;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for the parameters of the request made by unlockBooking()
 * @category unlockBooking()
 */
export type UnlockBookingParameters = {
  ID: string;
};

/**
 * Typing for all possible responses to the request made by unlockBooking()
 * @category unlockBooking()
 */
export type UnlockBookingResponse =
  | UnlockBookingSuccessResponse
  | UnlockBookingErrorResponse;

/**
 * Typing for all successful responses to the request made by unlockBooking()
 * @category unlockBooking()
 */
export type UnlockBookingSuccessResponse = UnlockBookingResponse200;

/**
 * Typing for all error responses to the request made by unlockBooking()
 * @category unlockBooking()
 */
export type UnlockBookingErrorResponse =
  | UnlockBookingResponse401
  | UnlockBookingResponse403
  | UnlockBookingResponse404
  | UnlockBookingResponse412
  | UnlockBookingResponse500
  | UnlockBookingResponse503;

/**
 * Typing for a response with status 200 to the request made by unlockBooking()
 * @category unlockBooking()
 */
export interface UnlockBookingResponse200 extends Types.SuccessResponse {
  status: 200;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 401 to the request made by unlockBooking()
 * @category unlockBooking()
 */
export interface UnlockBookingResponse401 extends Types.ErrorResponse {
  status: 401;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 403 to the request made by unlockBooking()
 * @category unlockBooking()
 */
export interface UnlockBookingResponse403 extends Types.ErrorResponse {
  status: 403;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 404 to the request made by unlockBooking()
 * @category unlockBooking()
 */
export interface UnlockBookingResponse404 extends Types.ErrorResponse {
  status: 404;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 412 to the request made by unlockBooking()
 * @category unlockBooking()
 */
export interface UnlockBookingResponse412 extends Types.ErrorResponse {
  status: 412;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 500 to the request made by unlockBooking()
 * @category unlockBooking()
 */
export interface UnlockBookingResponse500 extends Types.ErrorResponse {
  status: 500;
  headers?: {
    [k: string]: string | undefined;
  };
  body: string;
}

/**
 * Typing for a response with status 503 to the request made by unlockBooking()
 * @category unlockBooking()
 */
export interface UnlockBookingResponse503 extends Types.ErrorResponse {
  status: 503;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for the parameters of the request made by bookingCallback()
 * @category bookingCallback()
 */
export type BookingCallbackParameters = {
  ID: string;
};

/**
 * Typing for all possible responses to the request made by bookingCallback()
 * @category bookingCallback()
 */
export type BookingCallbackResponse =
  | BookingCallbackSuccessResponse
  | BookingCallbackErrorResponse;

/**
 * Typing for all successful responses to the request made by bookingCallback()
 * @category bookingCallback()
 */
export type BookingCallbackSuccessResponse = BookingCallbackResponse200;

/**
 * Typing for all error responses to the request made by bookingCallback()
 * @category bookingCallback()
 */
export type BookingCallbackErrorResponse =
  | BookingCallbackResponse404
  | BookingCallbackResponse500
  | BookingCallbackResponse503;

/**
 * Typing for a response with status 200 to the request made by bookingCallback()
 * @category bookingCallback()
 */
export interface BookingCallbackResponse200 extends Types.SuccessResponse {
  status: 200;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 404 to the request made by bookingCallback()
 * @category bookingCallback()
 */
export interface BookingCallbackResponse404 extends Types.ErrorResponse {
  status: 404;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}

/**
 * Typing for a response with status 500 to the request made by bookingCallback()
 * @category bookingCallback()
 */
export interface BookingCallbackResponse500 extends Types.ErrorResponse {
  status: 500;
  headers?: {
    [k: string]: string | undefined;
  };
  body: string;
}

/**
 * Typing for a response with status 503 to the request made by bookingCallback()
 * @category bookingCallback()
 */
export interface BookingCallbackResponse503 extends Types.ErrorResponse {
  status: 503;
  headers?: {
    [k: string]: string | undefined;
  };
  body?: undefined;
}
