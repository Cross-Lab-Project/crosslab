// @ts-nocheck
/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */
import {
    ResponseData
} from "./types.js"

import {
    getLtiPlatformResponseType,
	postLtiPlatformResponseType,
	getLtiPlatformByPlatformIdParametersType,
	getLtiPlatformByPlatformIdResponseType,
	patchLtiPlatformByPlatformIdParametersType,
	patchLtiPlatformByPlatformIdResponseType,
	deleteLtiPlatformByPlatformIdParametersType,
	deleteLtiPlatformByPlatformIdResponseType,
	postLtiPlatformByPlatformIdLoginParametersType,
	postLtiPlatformByPlatformIdLoginRequestBodyType,
	postLtiPlatformByPlatformIdLoginResponseType,
	postLtiPlatformByPlatformIdLaunchParametersType,
	postLtiPlatformByPlatformIdLaunchRequestBodyType,
	postLtiPlatformByPlatformIdLaunchResponseType,
	getLtiPlatformByPlatformIdJwksParametersType,
	getLtiPlatformByPlatformIdJwksResponseType,
	getLtiResourceResponseType,
	getLtiResourceByResourceIdParametersType,
	getLtiResourceByResourceIdResponseType,
	patchLtiResourceByResourceIdParametersType,
	patchLtiResourceByResourceIdRequestBodyType,
	patchLtiResourceByResourceIdResponseType,
	deleteLtiResourceByResourceIdParametersType,
	deleteLtiResourceByResourceIdResponseType,
	getLtiResourceByResourceIdStudentsParametersType,
	getLtiResourceByResourceIdStudentsResponseType,
	patchLtiResourceByResourceIdStudentsParametersType,
	patchLtiResourceByResourceIdStudentsRequestBodyType,
	patchLtiResourceByResourceIdStudentsResponseType,
	getLtiResourceByResourceIdStudentsByStudentIdParametersType,
	getLtiResourceByResourceIdStudentsByStudentIdResponseType,
	patchLtiResourceByResourceIdStudentsByStudentIdParametersType,
	patchLtiResourceByResourceIdStudentsByStudentIdRequestBodyType,
	patchLtiResourceByResourceIdStudentsByStudentIdResponseType,
	patchLtiSessionBySessionIdExperimentParametersType,
	patchLtiSessionBySessionIdExperimentRequestBodyType,
	patchLtiSessionBySessionIdExperimentResponseType,
	postLtiSessionBySessionIdExperimentCallbackParametersType,
	postLtiSessionBySessionIdExperimentCallbackRequestBodyType,
	postLtiSessionBySessionIdExperimentCallbackResponseType
} from "./signatures.js"

import * as basicValidation from "./basicValidation.cjs"

/**
 * This function validates the inputs of a GET request on /lti/platform
 */
export function validateGetLtiPlatformInput() {
    return true
}

/**
 * This function validates the outputs to a GET request on /lti/platform
 */
export function validateGetLtiPlatformOutput(response: ResponseData): response is getLtiPlatformResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validateGetLtiPlatformResponse200Response(response.body)) {
            (validateGetLtiPlatformOutput as any).errors = (basicValidation.validateGetLtiPlatformResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateGetLtiPlatformOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a POST request on /lti/platform
 */
export function validatePostLtiPlatformInput() {
    return true
}

/**
 * This function validates the outputs to a POST request on /lti/platform
 */
export function validatePostLtiPlatformOutput(response: ResponseData): response is postLtiPlatformResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 201) {
        if (response.headers) {
            if (
                !basicValidation.validatePostLtiPlatformHeaderLocationResponse(response.headers["Location"])
                
				&& response.headers['Location'] !== undefined ) {
                (validatePostLtiPlatformOutput as any).errors = (basicValidation.validatePostLtiPlatformHeaderLocationResponse as any).errors
                return false
            }
        } else {
            if (response.headers !== undefined) {
                return false
            }
        }

        if (!basicValidation.validatePostLtiPlatformResponse201Response(response.body)) {
            (validatePostLtiPlatformOutput as any).errors = (basicValidation.validatePostLtiPlatformResponse201Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validatePostLtiPlatformOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a GET request on /lti/platform/{platform_id}
 */
export function validateGetLtiPlatformByPlatformIdInput(parameters: getLtiPlatformByPlatformIdParametersType) {
    if (parameters) {
        if (
            !basicValidation.validatePlatformIdRequest(parameters["platform_id"])
        ) {
            (validateGetLtiPlatformByPlatformIdInput as any).errors = (basicValidation.validatePlatformIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a GET request on /lti/platform/{platform_id}
 */
export function validateGetLtiPlatformByPlatformIdOutput(response: ResponseData): response is getLtiPlatformByPlatformIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validateGetLtiPlatformByPlatformIdResponse200Response(response.body)) {
            (validateGetLtiPlatformByPlatformIdOutput as any).errors = (basicValidation.validateGetLtiPlatformByPlatformIdResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateGetLtiPlatformByPlatformIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a PATCH request on /lti/platform/{platform_id}
 */
export function validatePatchLtiPlatformByPlatformIdInput(parameters: patchLtiPlatformByPlatformIdParametersType) {
    if (parameters) {
        if (
            !basicValidation.validatePlatformIdRequest(parameters["platform_id"])
        ) {
            (validatePatchLtiPlatformByPlatformIdInput as any).errors = (basicValidation.validatePlatformIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a PATCH request on /lti/platform/{platform_id}
 */
export function validatePatchLtiPlatformByPlatformIdOutput(response: ResponseData): response is patchLtiPlatformByPlatformIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validatePatchLtiPlatformByPlatformIdResponse200Response(response.body)) {
            (validatePatchLtiPlatformByPlatformIdOutput as any).errors = (basicValidation.validatePatchLtiPlatformByPlatformIdResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 400) {
        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validatePatchLtiPlatformByPlatformIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a DELETE request on /lti/platform/{platform_id}
 */
export function validateDeleteLtiPlatformByPlatformIdInput(parameters: deleteLtiPlatformByPlatformIdParametersType) {
    if (parameters) {
        if (
            !basicValidation.validatePlatformIdRequest(parameters["platform_id"])
        ) {
            (validateDeleteLtiPlatformByPlatformIdInput as any).errors = (basicValidation.validatePlatformIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a DELETE request on /lti/platform/{platform_id}
 */
export function validateDeleteLtiPlatformByPlatformIdOutput(response: ResponseData): response is deleteLtiPlatformByPlatformIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 204) {
        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateDeleteLtiPlatformByPlatformIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a POST request on /lti/platform/{platform_id}/login
 */
export function validatePostLtiPlatformByPlatformIdLoginInput(parameters: postLtiPlatformByPlatformIdLoginParametersType, body: postLtiPlatformByPlatformIdLoginRequestBodyType) {
    if (parameters) {
        if (
            !basicValidation.validatePlatformIdRequest(parameters["platform_id"])
        ) {
            (validatePostLtiPlatformByPlatformIdLoginInput as any).errors = (basicValidation.validatePlatformIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    if (!basicValidation.validatePostLtiPlatformByPlatformIdLoginRequestBodyRequest(body)) {
        (validatePostLtiPlatformByPlatformIdLoginInput as any).errors = (basicValidation.validatePostLtiPlatformByPlatformIdLoginRequestBodyRequest as any).errors
        return false
    }

    return true
}

/**
 * This function validates the outputs to a POST request on /lti/platform/{platform_id}/login
 */
export function validatePostLtiPlatformByPlatformIdLoginOutput(response: ResponseData): response is postLtiPlatformByPlatformIdLoginResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validatePostLtiPlatformByPlatformIdLoginResponse200Response(response.body)) {
            (validatePostLtiPlatformByPlatformIdLoginOutput as any).errors = (basicValidation.validatePostLtiPlatformByPlatformIdLoginResponse200Response as any).errors
            return false
        }

        return true
    }

    (validatePostLtiPlatformByPlatformIdLoginOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a POST request on /lti/platform/{platform_id}/launch
 */
export function validatePostLtiPlatformByPlatformIdLaunchInput(parameters: postLtiPlatformByPlatformIdLaunchParametersType, body: postLtiPlatformByPlatformIdLaunchRequestBodyType) {
    if (parameters) {
        if (
            !basicValidation.validatePlatformIdRequest(parameters["platform_id"])
        ) {
            (validatePostLtiPlatformByPlatformIdLaunchInput as any).errors = (basicValidation.validatePlatformIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    if (!basicValidation.validatePostLtiPlatformByPlatformIdLaunchRequestBodyRequest(body)) {
        (validatePostLtiPlatformByPlatformIdLaunchInput as any).errors = (basicValidation.validatePostLtiPlatformByPlatformIdLaunchRequestBodyRequest as any).errors
        return false
    }

    return true
}

/**
 * This function validates the outputs to a POST request on /lti/platform/{platform_id}/launch
 */
export function validatePostLtiPlatformByPlatformIdLaunchOutput(response: ResponseData): response is postLtiPlatformByPlatformIdLaunchResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validatePostLtiPlatformByPlatformIdLaunchResponse200Response(response.body)) {
            (validatePostLtiPlatformByPlatformIdLaunchOutput as any).errors = (basicValidation.validatePostLtiPlatformByPlatformIdLaunchResponse200Response as any).errors
            return false
        }

        return true
    }

    (validatePostLtiPlatformByPlatformIdLaunchOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a GET request on /lti/platform/{platform_id}/jwks
 */
export function validateGetLtiPlatformByPlatformIdJwksInput(parameters: getLtiPlatformByPlatformIdJwksParametersType) {
    if (parameters) {
        if (
            !basicValidation.validatePlatformIdRequest(parameters["platform_id"])
        ) {
            (validateGetLtiPlatformByPlatformIdJwksInput as any).errors = (basicValidation.validatePlatformIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a GET request on /lti/platform/{platform_id}/jwks
 */
export function validateGetLtiPlatformByPlatformIdJwksOutput(response: ResponseData): response is getLtiPlatformByPlatformIdJwksResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validateGetLtiPlatformByPlatformIdJwksResponse200Response(response.body)) {
            (validateGetLtiPlatformByPlatformIdJwksOutput as any).errors = (basicValidation.validateGetLtiPlatformByPlatformIdJwksResponse200Response as any).errors
            return false
        }

        return true
    }

    (validateGetLtiPlatformByPlatformIdJwksOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a GET request on /lti/resource
 */
export function validateGetLtiResourceInput() {
    return true
}

/**
 * This function validates the outputs to a GET request on /lti/resource
 */
export function validateGetLtiResourceOutput(response: ResponseData): response is getLtiResourceResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validateGetLtiResourceResponse200Response(response.body)) {
            (validateGetLtiResourceOutput as any).errors = (basicValidation.validateGetLtiResourceResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateGetLtiResourceOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a GET request on /lti/resource/{resource_id}
 */
export function validateGetLtiResourceByResourceIdInput(parameters: getLtiResourceByResourceIdParametersType) {
    if (parameters) {
        if (
            !basicValidation.validateResourceIdRequest(parameters["resource_id"])
        ) {
            (validateGetLtiResourceByResourceIdInput as any).errors = (basicValidation.validateResourceIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a GET request on /lti/resource/{resource_id}
 */
export function validateGetLtiResourceByResourceIdOutput(response: ResponseData): response is getLtiResourceByResourceIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validateGetLtiResourceByResourceIdResponse200Response(response.body)) {
            (validateGetLtiResourceByResourceIdOutput as any).errors = (basicValidation.validateGetLtiResourceByResourceIdResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateGetLtiResourceByResourceIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a PATCH request on /lti/resource/{resource_id}
 */
export function validatePatchLtiResourceByResourceIdInput(parameters: patchLtiResourceByResourceIdParametersType, body: patchLtiResourceByResourceIdRequestBodyType) {
    if (parameters) {
        if (
            !basicValidation.validateResourceIdRequest(parameters["resource_id"])
        ) {
            (validatePatchLtiResourceByResourceIdInput as any).errors = (basicValidation.validateResourceIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    if (!basicValidation.validatePatchLtiResourceByResourceIdRequestBodyRequest(body)) {
        (validatePatchLtiResourceByResourceIdInput as any).errors = (basicValidation.validatePatchLtiResourceByResourceIdRequestBodyRequest as any).errors
        return false
    }

    return true
}

/**
 * This function validates the outputs to a PATCH request on /lti/resource/{resource_id}
 */
export function validatePatchLtiResourceByResourceIdOutput(response: ResponseData): response is patchLtiResourceByResourceIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validatePatchLtiResourceByResourceIdResponse200Response(response.body)) {
            (validatePatchLtiResourceByResourceIdOutput as any).errors = (basicValidation.validatePatchLtiResourceByResourceIdResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 400) {
        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validatePatchLtiResourceByResourceIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a DELETE request on /lti/resource/{resource_id}
 */
export function validateDeleteLtiResourceByResourceIdInput(parameters: deleteLtiResourceByResourceIdParametersType) {
    if (parameters) {
        if (
            !basicValidation.validateResourceIdRequest(parameters["resource_id"])
        ) {
            (validateDeleteLtiResourceByResourceIdInput as any).errors = (basicValidation.validateResourceIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a DELETE request on /lti/resource/{resource_id}
 */
export function validateDeleteLtiResourceByResourceIdOutput(response: ResponseData): response is deleteLtiResourceByResourceIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 204) {
        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateDeleteLtiResourceByResourceIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a GET request on /lti/resource/{resource_id}/students
 */
export function validateGetLtiResourceByResourceIdStudentsInput(parameters: getLtiResourceByResourceIdStudentsParametersType) {
    if (parameters) {
        if (
            !basicValidation.validateResourceIdRequest(parameters["resource_id"])
        ) {
            (validateGetLtiResourceByResourceIdStudentsInput as any).errors = (basicValidation.validateResourceIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a GET request on /lti/resource/{resource_id}/students
 */
export function validateGetLtiResourceByResourceIdStudentsOutput(response: ResponseData): response is getLtiResourceByResourceIdStudentsResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validateGetLtiResourceByResourceIdStudentsResponse200Response(response.body)) {
            (validateGetLtiResourceByResourceIdStudentsOutput as any).errors = (basicValidation.validateGetLtiResourceByResourceIdStudentsResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateGetLtiResourceByResourceIdStudentsOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a PATCH request on /lti/resource/{resource_id}/students
 */
export function validatePatchLtiResourceByResourceIdStudentsInput(parameters: patchLtiResourceByResourceIdStudentsParametersType, body: patchLtiResourceByResourceIdStudentsRequestBodyType) {
    if (parameters) {
        if (
            !basicValidation.validateResourceIdRequest(parameters["resource_id"])
        ) {
            (validatePatchLtiResourceByResourceIdStudentsInput as any).errors = (basicValidation.validateResourceIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    if (!basicValidation.validatePatchLtiResourceByResourceIdStudentsRequestBodyRequest(body)) {
        (validatePatchLtiResourceByResourceIdStudentsInput as any).errors = (basicValidation.validatePatchLtiResourceByResourceIdStudentsRequestBodyRequest as any).errors
        return false
    }

    return true
}

/**
 * This function validates the outputs to a PATCH request on /lti/resource/{resource_id}/students
 */
export function validatePatchLtiResourceByResourceIdStudentsOutput(response: ResponseData): response is patchLtiResourceByResourceIdStudentsResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validatePatchLtiResourceByResourceIdStudentsResponse200Response(response.body)) {
            (validatePatchLtiResourceByResourceIdStudentsOutput as any).errors = (basicValidation.validatePatchLtiResourceByResourceIdStudentsResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validatePatchLtiResourceByResourceIdStudentsOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a GET request on /lti/resource/{resource_id}/students/{student_id}
 */
export function validateGetLtiResourceByResourceIdStudentsByStudentIdInput(parameters: getLtiResourceByResourceIdStudentsByStudentIdParametersType) {
    if (parameters) {
        if (
            !basicValidation.validateResourceIdRequest(parameters["resource_id"])
        ) {
            (validateGetLtiResourceByResourceIdStudentsByStudentIdInput as any).errors = (basicValidation.validateResourceIdRequest as any).errors
            return false
        }
        if (
            !basicValidation.validateStudentIdRequest(parameters["student_id"])
        ) {
            (validateGetLtiResourceByResourceIdStudentsByStudentIdInput as any).errors = (basicValidation.validateStudentIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    return true
}

/**
 * This function validates the outputs to a GET request on /lti/resource/{resource_id}/students/{student_id}
 */
export function validateGetLtiResourceByResourceIdStudentsByStudentIdOutput(response: ResponseData): response is getLtiResourceByResourceIdStudentsByStudentIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validateGetLtiResourceByResourceIdStudentsByStudentIdResponse200Response(response.body)) {
            (validateGetLtiResourceByResourceIdStudentsByStudentIdOutput as any).errors = (basicValidation.validateGetLtiResourceByResourceIdStudentsByStudentIdResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validateGetLtiResourceByResourceIdStudentsByStudentIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a PATCH request on /lti/resource/{resource_id}/students/{student_id}
 */
export function validatePatchLtiResourceByResourceIdStudentsByStudentIdInput(parameters: patchLtiResourceByResourceIdStudentsByStudentIdParametersType, body: patchLtiResourceByResourceIdStudentsByStudentIdRequestBodyType) {
    if (parameters) {
        if (
            !basicValidation.validateResourceIdRequest(parameters["resource_id"])
        ) {
            (validatePatchLtiResourceByResourceIdStudentsByStudentIdInput as any).errors = (basicValidation.validateResourceIdRequest as any).errors
            return false
        }
        if (
            !basicValidation.validateStudentIdRequest(parameters["student_id"])
        ) {
            (validatePatchLtiResourceByResourceIdStudentsByStudentIdInput as any).errors = (basicValidation.validateStudentIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    if (!basicValidation.validatePatchLtiResourceByResourceIdStudentsByStudentIdRequestBodyRequest(body)) {
        (validatePatchLtiResourceByResourceIdStudentsByStudentIdInput as any).errors = (basicValidation.validatePatchLtiResourceByResourceIdStudentsByStudentIdRequestBodyRequest as any).errors
        return false
    }

    return true
}

/**
 * This function validates the outputs to a PATCH request on /lti/resource/{resource_id}/students/{student_id}
 */
export function validatePatchLtiResourceByResourceIdStudentsByStudentIdOutput(response: ResponseData): response is patchLtiResourceByResourceIdStudentsByStudentIdResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 200) {
        if (!basicValidation.validatePatchLtiResourceByResourceIdStudentsByStudentIdResponse200Response(response.body)) {
            (validatePatchLtiResourceByResourceIdStudentsByStudentIdOutput as any).errors = (basicValidation.validatePatchLtiResourceByResourceIdStudentsByStudentIdResponse200Response as any).errors
            return false
        }

        return true
    }

    
    if (response.status === 401) {
        return true
    }

    (validatePatchLtiResourceByResourceIdStudentsByStudentIdOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a PATCH request on /lti/session/{session_id}/experiment
 */
export function validatePatchLtiSessionBySessionIdExperimentInput(parameters: patchLtiSessionBySessionIdExperimentParametersType, body: patchLtiSessionBySessionIdExperimentRequestBodyType) {
    if (parameters) {
        if (
            !basicValidation.validateSessionIdRequest(parameters["session_id"])
        ) {
            (validatePatchLtiSessionBySessionIdExperimentInput as any).errors = (basicValidation.validateSessionIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    if (!basicValidation.validatePatchLtiSessionBySessionIdExperimentRequestBodyRequest(body)) {
        (validatePatchLtiSessionBySessionIdExperimentInput as any).errors = (basicValidation.validatePatchLtiSessionBySessionIdExperimentRequestBodyRequest as any).errors
        return false
    }

    return true
}

/**
 * This function validates the outputs to a PATCH request on /lti/session/{session_id}/experiment
 */
export function validatePatchLtiSessionBySessionIdExperimentOutput(response: ResponseData): response is patchLtiSessionBySessionIdExperimentResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 201) {
        return true
    }

    (validatePatchLtiSessionBySessionIdExperimentOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}

/**
 * This function validates the inputs of a POST request on /lti/session/{session_id}/experiment_callback
 */
export function validatePostLtiSessionBySessionIdExperimentCallbackInput(parameters: postLtiSessionBySessionIdExperimentCallbackParametersType, body: postLtiSessionBySessionIdExperimentCallbackRequestBodyType) {
    if (parameters) {
        if (
            !basicValidation.validateSessionIdRequest(parameters["session_id"])
        ) {
            (validatePostLtiSessionBySessionIdExperimentCallbackInput as any).errors = (basicValidation.validateSessionIdRequest as any).errors
            return false
        }
    } else {
        return false
    }

    if (!basicValidation.validatePostLtiSessionBySessionIdExperimentCallbackRequestBodyRequest(body)) {
        (validatePostLtiSessionBySessionIdExperimentCallbackInput as any).errors = (basicValidation.validatePostLtiSessionBySessionIdExperimentCallbackRequestBodyRequest as any).errors
        return false
    }

    return true
}

/**
 * This function validates the outputs to a POST request on /lti/session/{session_id}/experiment_callback
 */
export function validatePostLtiSessionBySessionIdExperimentCallbackOutput(response: ResponseData): response is postLtiSessionBySessionIdExperimentCallbackResponseType {
    if (response.status < 100 || response.status >= 600) return false

    
    if (response.status === 201) {
        return true
    }

    (validatePostLtiSessionBySessionIdExperimentCallbackOutput as any).errors = `Response status ${response.status} is unexpected`

    return false
}