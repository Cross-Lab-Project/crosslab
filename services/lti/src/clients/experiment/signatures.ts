/**
 * This file was automatically generated by openapi-codegeneration.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source OpenAPI file,
 * and run openapi-codegeneration to regenerate this file.
 */
import * as Types from "./types.js"

/**
 * Typing for all possible responses to the request made by listExperiments()
 * @category listExperiments()
 */
export type ListExperimentsResponse = ListExperimentsSuccessResponse | ListExperimentsErrorResponse

/**
 * Typing for all successful responses to the request made by listExperiments()
 * @category listExperiments()
 */
export type ListExperimentsSuccessResponse = ListExperimentsResponse200

/**
 * Typing for all error responses to the request made by listExperiments()
 * @category listExperiments()
 */
export type ListExperimentsErrorResponse = ListExperimentsResponse400 | ListExperimentsResponse401 | ListExperimentsResponse403 | ListExperimentsResponse404 | ListExperimentsResponse500

/**
 * Typing for a response with status 200 to the request made by listExperiments()
 * @category listExperiments()
 */
export interface ListExperimentsResponse200 extends Types.SuccessResponse {
    status: 200
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.ExperimentOverview<"response">[]
}

/**
 * Typing for a response with status 400 to the request made by listExperiments()
 * @category listExperiments()
 */
export interface ListExperimentsResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by listExperiments()
 * @category listExperiments()
 */
export interface ListExperimentsResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by listExperiments()
 * @category listExperiments()
 */
export interface ListExperimentsResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by listExperiments()
 * @category listExperiments()
 */
export interface ListExperimentsResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by listExperiments()
 * @category listExperiments()
 */
export interface ListExperimentsResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the parameters of the request made by createExperiment()
 * @category createExperiment()
 */
export type CreateExperimentParameters = {
    "changedURL"?: string,
}

/**
 * Typing for the body of the request made by createExperiment()
 * @category createExperiment()
 */
export type CreateExperimentBody = Types.Experiment<"request">

/**
 * Typing for all possible responses to the request made by createExperiment()
 * @category createExperiment()
 */
export type CreateExperimentResponse = CreateExperimentSuccessResponse | CreateExperimentErrorResponse

/**
 * Typing for all successful responses to the request made by createExperiment()
 * @category createExperiment()
 */
export type CreateExperimentSuccessResponse = CreateExperimentResponse201 | CreateExperimentResponse202

/**
 * Typing for all error responses to the request made by createExperiment()
 * @category createExperiment()
 */
export type CreateExperimentErrorResponse = CreateExperimentResponse400 | CreateExperimentResponse401 | CreateExperimentResponse403 | CreateExperimentResponse404 | CreateExperimentResponse500

/**
 * Typing for a response with status 201 to the request made by createExperiment()
 * @category createExperiment()
 */
export interface CreateExperimentResponse201 extends Types.SuccessResponse {
    status: 201
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Experiment<"response">
}

/**
 * Typing for a response with status 202 to the request made by createExperiment()
 * @category createExperiment()
 */
export interface CreateExperimentResponse202 extends Types.SuccessResponse {
    status: 202
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Experiment<"response">
}

/**
 * Typing for a response with status 400 to the request made by createExperiment()
 * @category createExperiment()
 */
export interface CreateExperimentResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by createExperiment()
 * @category createExperiment()
 */
export interface CreateExperimentResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by createExperiment()
 * @category createExperiment()
 */
export interface CreateExperimentResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by createExperiment()
 * @category createExperiment()
 */
export interface CreateExperimentResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by createExperiment()
 * @category createExperiment()
 */
export interface CreateExperimentResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the parameters of the request made by getExperiment()
 * @category getExperiment()
 */
export type GetExperimentParameters = {
    "experiment_id": string,
}

/**
 * Typing for all possible responses to the request made by getExperiment()
 * @category getExperiment()
 */
export type GetExperimentResponse = GetExperimentSuccessResponse | GetExperimentErrorResponse

/**
 * Typing for all successful responses to the request made by getExperiment()
 * @category getExperiment()
 */
export type GetExperimentSuccessResponse = GetExperimentResponse200

/**
 * Typing for all error responses to the request made by getExperiment()
 * @category getExperiment()
 */
export type GetExperimentErrorResponse = GetExperimentResponse400 | GetExperimentResponse401 | GetExperimentResponse403 | GetExperimentResponse404 | GetExperimentResponse500

/**
 * Typing for a response with status 200 to the request made by getExperiment()
 * @category getExperiment()
 */
export interface GetExperimentResponse200 extends Types.SuccessResponse {
    status: 200
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Experiment<"response">
}

/**
 * Typing for a response with status 400 to the request made by getExperiment()
 * @category getExperiment()
 */
export interface GetExperimentResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by getExperiment()
 * @category getExperiment()
 */
export interface GetExperimentResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by getExperiment()
 * @category getExperiment()
 */
export interface GetExperimentResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by getExperiment()
 * @category getExperiment()
 */
export interface GetExperimentResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by getExperiment()
 * @category getExperiment()
 */
export interface GetExperimentResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the parameters of the request made by updateExperiment()
 * @category updateExperiment()
 */
export type UpdateExperimentParameters = {
    "experiment_id": string,
	"changedURL"?: string,
}

/**
 * Typing for the body of the request made by updateExperiment()
 * @category updateExperiment()
 */
export type UpdateExperimentBody = Types.ExperimentUpdate<"request"> | undefined

/**
 * Typing for all possible responses to the request made by updateExperiment()
 * @category updateExperiment()
 */
export type UpdateExperimentResponse = UpdateExperimentSuccessResponse | UpdateExperimentErrorResponse

/**
 * Typing for all successful responses to the request made by updateExperiment()
 * @category updateExperiment()
 */
export type UpdateExperimentSuccessResponse = UpdateExperimentResponse200 | UpdateExperimentResponse202

/**
 * Typing for all error responses to the request made by updateExperiment()
 * @category updateExperiment()
 */
export type UpdateExperimentErrorResponse = UpdateExperimentResponse400 | UpdateExperimentResponse401 | UpdateExperimentResponse403 | UpdateExperimentResponse404 | UpdateExperimentResponse500

/**
 * Typing for a response with status 200 to the request made by updateExperiment()
 * @category updateExperiment()
 */
export interface UpdateExperimentResponse200 extends Types.SuccessResponse {
    status: 200
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Experiment<"response">
}

/**
 * Typing for a response with status 202 to the request made by updateExperiment()
 * @category updateExperiment()
 */
export interface UpdateExperimentResponse202 extends Types.SuccessResponse {
    status: 202
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Experiment<"response">
}

/**
 * Typing for a response with status 400 to the request made by updateExperiment()
 * @category updateExperiment()
 */
export interface UpdateExperimentResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by updateExperiment()
 * @category updateExperiment()
 */
export interface UpdateExperimentResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by updateExperiment()
 * @category updateExperiment()
 */
export interface UpdateExperimentResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by updateExperiment()
 * @category updateExperiment()
 */
export interface UpdateExperimentResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by updateExperiment()
 * @category updateExperiment()
 */
export interface UpdateExperimentResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the parameters of the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export type DeleteExperimentParameters = {
    "experiment_id": string,
}

/**
 * Typing for all possible responses to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export type DeleteExperimentResponse = DeleteExperimentSuccessResponse | DeleteExperimentErrorResponse

/**
 * Typing for all successful responses to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export type DeleteExperimentSuccessResponse = DeleteExperimentResponse204

/**
 * Typing for all error responses to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export type DeleteExperimentErrorResponse = DeleteExperimentResponse400 | DeleteExperimentResponse401 | DeleteExperimentResponse403 | DeleteExperimentResponse404 | DeleteExperimentResponse500

/**
 * Typing for a response with status 204 to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export interface DeleteExperimentResponse204 extends Types.SuccessResponse {
    status: 204
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 400 to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export interface DeleteExperimentResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export interface DeleteExperimentResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export interface DeleteExperimentResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export interface DeleteExperimentResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by deleteExperiment()
 * @category deleteExperiment()
 */
export interface DeleteExperimentResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for all possible responses to the request made by listTemplate()
 * @category listTemplate()
 */
export type ListTemplateResponse = ListTemplateSuccessResponse | ListTemplateErrorResponse

/**
 * Typing for all successful responses to the request made by listTemplate()
 * @category listTemplate()
 */
export type ListTemplateSuccessResponse = ListTemplateResponse200

/**
 * Typing for all error responses to the request made by listTemplate()
 * @category listTemplate()
 */
export type ListTemplateErrorResponse = ListTemplateResponse400 | ListTemplateResponse401 | ListTemplateResponse403 | ListTemplateResponse404 | ListTemplateResponse500

/**
 * Typing for a response with status 200 to the request made by listTemplate()
 * @category listTemplate()
 */
export interface ListTemplateResponse200 extends Types.SuccessResponse {
    status: 200
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.TemplateOverview<"response">[]
}

/**
 * Typing for a response with status 400 to the request made by listTemplate()
 * @category listTemplate()
 */
export interface ListTemplateResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by listTemplate()
 * @category listTemplate()
 */
export interface ListTemplateResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by listTemplate()
 * @category listTemplate()
 */
export interface ListTemplateResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by listTemplate()
 * @category listTemplate()
 */
export interface ListTemplateResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by listTemplate()
 * @category listTemplate()
 */
export interface ListTemplateResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the body of the request made by createTemplate()
 * @category createTemplate()
 */
export type CreateTemplateBody = Types.Template<"request">

/**
 * Typing for all possible responses to the request made by createTemplate()
 * @category createTemplate()
 */
export type CreateTemplateResponse = CreateTemplateSuccessResponse | CreateTemplateErrorResponse

/**
 * Typing for all successful responses to the request made by createTemplate()
 * @category createTemplate()
 */
export type CreateTemplateSuccessResponse = CreateTemplateResponse201 | CreateTemplateResponse202

/**
 * Typing for all error responses to the request made by createTemplate()
 * @category createTemplate()
 */
export type CreateTemplateErrorResponse = CreateTemplateResponse400 | CreateTemplateResponse401 | CreateTemplateResponse403 | CreateTemplateResponse404 | CreateTemplateResponse500

/**
 * Typing for a response with status 201 to the request made by createTemplate()
 * @category createTemplate()
 */
export interface CreateTemplateResponse201 extends Types.SuccessResponse {
    status: 201
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Template<"response">
}

/**
 * Typing for a response with status 202 to the request made by createTemplate()
 * @category createTemplate()
 */
export interface CreateTemplateResponse202 extends Types.SuccessResponse {
    status: 202
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Template<"response">
}

/**
 * Typing for a response with status 400 to the request made by createTemplate()
 * @category createTemplate()
 */
export interface CreateTemplateResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by createTemplate()
 * @category createTemplate()
 */
export interface CreateTemplateResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by createTemplate()
 * @category createTemplate()
 */
export interface CreateTemplateResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by createTemplate()
 * @category createTemplate()
 */
export interface CreateTemplateResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by createTemplate()
 * @category createTemplate()
 */
export interface CreateTemplateResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the parameters of the request made by getTemplate()
 * @category getTemplate()
 */
export type GetTemplateParameters = {
    "template_id": string,
}

/**
 * Typing for all possible responses to the request made by getTemplate()
 * @category getTemplate()
 */
export type GetTemplateResponse = GetTemplateSuccessResponse | GetTemplateErrorResponse

/**
 * Typing for all successful responses to the request made by getTemplate()
 * @category getTemplate()
 */
export type GetTemplateSuccessResponse = GetTemplateResponse200

/**
 * Typing for all error responses to the request made by getTemplate()
 * @category getTemplate()
 */
export type GetTemplateErrorResponse = GetTemplateResponse400 | GetTemplateResponse401 | GetTemplateResponse403 | GetTemplateResponse404 | GetTemplateResponse500

/**
 * Typing for a response with status 200 to the request made by getTemplate()
 * @category getTemplate()
 */
export interface GetTemplateResponse200 extends Types.SuccessResponse {
    status: 200
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Template<"response">
}

/**
 * Typing for a response with status 400 to the request made by getTemplate()
 * @category getTemplate()
 */
export interface GetTemplateResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by getTemplate()
 * @category getTemplate()
 */
export interface GetTemplateResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by getTemplate()
 * @category getTemplate()
 */
export interface GetTemplateResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by getTemplate()
 * @category getTemplate()
 */
export interface GetTemplateResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by getTemplate()
 * @category getTemplate()
 */
export interface GetTemplateResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the parameters of the request made by updateTemplate()
 * @category updateTemplate()
 */
export type UpdateTemplateParameters = {
    "template_id": string,
}

/**
 * Typing for the body of the request made by updateTemplate()
 * @category updateTemplate()
 */
export type UpdateTemplateBody = Types.TemplateUpdate<"request">

/**
 * Typing for all possible responses to the request made by updateTemplate()
 * @category updateTemplate()
 */
export type UpdateTemplateResponse = UpdateTemplateSuccessResponse | UpdateTemplateErrorResponse

/**
 * Typing for all successful responses to the request made by updateTemplate()
 * @category updateTemplate()
 */
export type UpdateTemplateSuccessResponse = UpdateTemplateResponse200 | UpdateTemplateResponse202

/**
 * Typing for all error responses to the request made by updateTemplate()
 * @category updateTemplate()
 */
export type UpdateTemplateErrorResponse = UpdateTemplateResponse400 | UpdateTemplateResponse401 | UpdateTemplateResponse403 | UpdateTemplateResponse404 | UpdateTemplateResponse500

/**
 * Typing for a response with status 200 to the request made by updateTemplate()
 * @category updateTemplate()
 */
export interface UpdateTemplateResponse200 extends Types.SuccessResponse {
    status: 200
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Template<"response">
}

/**
 * Typing for a response with status 202 to the request made by updateTemplate()
 * @category updateTemplate()
 */
export interface UpdateTemplateResponse202 extends Types.SuccessResponse {
    status: 202
    headers?: {
        [k: string]: string | undefined
    }
    body: Types.Template<"response">
}

/**
 * Typing for a response with status 400 to the request made by updateTemplate()
 * @category updateTemplate()
 */
export interface UpdateTemplateResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by updateTemplate()
 * @category updateTemplate()
 */
export interface UpdateTemplateResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by updateTemplate()
 * @category updateTemplate()
 */
export interface UpdateTemplateResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by updateTemplate()
 * @category updateTemplate()
 */
export interface UpdateTemplateResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by updateTemplate()
 * @category updateTemplate()
 */
export interface UpdateTemplateResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for the parameters of the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export type DeleteTemplateParameters = {
    "template_id": string,
}

/**
 * Typing for all possible responses to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export type DeleteTemplateResponse = DeleteTemplateSuccessResponse | DeleteTemplateErrorResponse

/**
 * Typing for all successful responses to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export type DeleteTemplateSuccessResponse = DeleteTemplateResponse204

/**
 * Typing for all error responses to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export type DeleteTemplateErrorResponse = DeleteTemplateResponse400 | DeleteTemplateResponse401 | DeleteTemplateResponse403 | DeleteTemplateResponse404 | DeleteTemplateResponse500

/**
 * Typing for a response with status 204 to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export interface DeleteTemplateResponse204 extends Types.SuccessResponse {
    status: 204
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 400 to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export interface DeleteTemplateResponse400 extends Types.ErrorResponse {
    status: 400
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 401 to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export interface DeleteTemplateResponse401 extends Types.ErrorResponse {
    status: 401
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 403 to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export interface DeleteTemplateResponse403 extends Types.ErrorResponse {
    status: 403
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 404 to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export interface DeleteTemplateResponse404 extends Types.ErrorResponse {
    status: 404
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}

/**
 * Typing for a response with status 500 to the request made by deleteTemplate()
 * @category deleteTemplate()
 */
export interface DeleteTemplateResponse500 extends Types.ErrorResponse {
    status: 500
    headers?: {
        [k: string]: string | undefined
    }
    body?: undefined
}