# yaml-language-server: $schema=https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.0/schema.json
openapi: 3.0.1
info:
  title: Buchungssystem
  description: APIs, die der Buchungsserver bereitstellt bzw. benutzen will
  version: 0.0.0
servers:
  - url: /v0
tags:
  - name: booking
    description: APIs, die der Buchungsserver zur Verfügung stellt
  - name: extern
    description: APIs, die benötigt werden
  - name: intern
    description: APIs, über die die Buchungssysteme miteinander kommunizieren. Die APIs sollten nicht von anderen verwendet werden.
paths:
  /GetTimetable:
    post:
      tags:
        - booking
      summary: Returns the timetable for given devices.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Experiment:
                  $ref: '#/components/schemas/Experiment'
                Start:
                  type: string
                  format: RFC3339
                End:
                  type: string
                  format: RFC3339
                Combined:
                  type: boolean
        required: true
      responses:
        '200':
          description: Timetable of free/booked time. If 'Combined' is set to true, an array with only one entry is returned containing the combined timetable
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Device:
                      type: string
                    Booked:
                      type: array
                      items:
                        $ref: '#/components/schemas/Timeslot'
                    Free:
                      type: array
                      items:
                        $ref: '#/components/schemas/Timeslot'
                   
        '401':
          description: No authorisation header found.
        '404':
          description: Request contains unknown type IDs. Those will be listed in response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '503':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
  /BookDevice:
    put:
      tags:
        - booking
      summary: Books an experiment.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Experiment:
                 $ref: '#/components/schemas/Experiment'
                Start:
                  type: string
                  description: Start time of the booking.
                  format: RFC3339
                End:
                  type: string
                  description: End time of the booking.
                  format: RFC3339
        required: true
      responses:
        '200':
          description: All devices were booked successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  BookingID:
                    type: string
        '401':
          description: No authorisation header found.
        '404':
          description: Request contains unknown device IDs. Those will be listed in response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '409':
          description: >-
            One or multiple devices are not available. Those will be listed in
            response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '503':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
  /CancelBooking/{ID}:
    delete:
      parameters:
        - in: path
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
        - booking
      summary: Cancels a booking
      responses:
        '200':
          description: >-
            The booking was cancelled. All associated devices were released.
        '401':
          description: No authorisation header found.
        '404':
          description: Request contains unknown booking ID.
        '423':
          description: >-
            Some of the devices are currently in use, no device booking is cancelled. The locked
            devices are listed in response.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '503':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
  /GetBooking/{ID}:
    get:
      parameters:
        - in: path
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
      - booking
      summary: >-
        Returns whether a list of devices is currently booked for a user
      responses:
        '200':
          description: All devices were booked by user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Experiment:
                    $ref: '#/components/schemas/Experiment'
                  Bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'
                  Start:
                    type: string
                    format: RFC3339
                  End:
                    type: string
                    format: RFC3339
        '401':
          description: No authorisation header found.
        '404':
          description: Request contains unknown ID
        '503':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
  /LockDevices/{ID}:
    patch:
      parameters:
        - in: path
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
      - booking
      summary: >-
        Locks all devices belonging to a booking
      responses:
        '200':
          description: All devices were booked by user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'
                  Start:
                    type: string
                    format: RFC3339
                  End:
                    type: string
                    format: RFC3339
        '401':
          description: No authorisation header found.
        '404':
          description: Request contains unknown ID
        '503':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
  /UnlockDevices/{ID}:
    patch:
      parameters:
        - in: path
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
      - booking
      summary: >-
        Unlocks all devices belonging to a booking
      responses:
        '200':
          description: All devices were booked by user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Bookings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'
                  Start:
                    type: string
                    format: RFC3339
                  End:
                    type: string
                    format: RFC3339
        '401':
          description: No authorisation header found.
        '404':
          description: Request contains unknown ID
        '503':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
  /GetDevices/{URL}:
    get:
      parameters:
        - in: path
          name: URL
          schema:
            type: string
          required: true
          description: ID of device or group
      tags:
        - extern
      summary: >-
        Returns all known devices for a type ID. If nessecary, the type ID will be resolved and
        looked up at other institutions. type ID might be a group, in which case the returned list
        will contain devices with different real type IDs (recursively resolved).
      responses:
        '200':
          description: List of devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '401':
          description: No authorisation header found.
        '404':
          description: Request contains unknown type ID.
        '503':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        ID:
          type: string
          description: Unique ID per user.
        Roles:
          type: array
          description: Array of user roles.
          items:
            type: string
    Booking:
      type: object
      properties:
        ID:
          type: string
          description: Unique ID of the booking.
        Time:
          $ref: "#/components/schemas/Timeslot"
        Devices:
          type: array
          items:
            type: string
            format: URI
        You:
          type: boolean
          description: If true, this booking was done by you.
    Device:
      description: A device might either be a physical/virtual device or a group of devicec
      type: object
      properties:
        ID:
          type: string
          description: Unique ID of the device.
          format: URI
        Institute:
          type: string
          description: Institute at which the device is located.
    Experiment:
      type: object
      properties:
        Devices:
          type: array
          items:
            type: string
    Timeslot:
      type: object
      properties:
        Start:
          type: string
          description: Start time of the booking.
          format: RFC3339
        End:
          type: string
          description: End time of the booking.
          format: RFC3339    