  /booking:
    post:
      operationId: 'newBooking'
      security:
        - JWT:
          - booking
          - booking:use
      tags:
        - booking-frontend
      summary: Books an experiment.
      x-optional-url: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
               - Devices
               - Time
              properties:
                Devices:
                  type: array
                  description: List of devices which should be added.
                  items:
                    $ref: '#/components/schemas/Device'
                Time:
                  $ref: '#/components/schemas/Timeslot'
                Type:
                  description: Type of booking. Currently, only one type is defined, but others might follow (e.g. priority booking). If empty, 'normal' is assumed.
                  type: string
                  enum:
                   - normal
                Execute_for:
                  description: Do the booking for the user in this field instead of the caller. For this to be accepted, caller must have the scope 'internal:execute_for'.
                  type: string
                  format: url
      responses:
        '200':
          description: The booking was accepted. The booking status will display whether the booking of all devices was successful.
          content:
            application/json:
              schema:
                type: object
                required:
                 - BookingID
                properties:
                  BookingID:
                    type: string
                    format: uri
                    description: ID at which the booking can be managed.
        '401':
          description: No authorisation header found.
        '403':
          description: >-
            Caller is not allowed to call this method. Usually, caller is missing required scopes.
        '500':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                description: Error description
                type: string
        '503':
          description: >-
            Service is unable to respond in time, possibly overloaded. Try again in a few minutes.
  /booking/{ID}:
    patch:
      operationId: 'updateBooking'
      security:
        - JWT: []
      parameters:
        - $ref: '#/components/parameters/ID'
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
        - booking-frontend
      summary: Allows the addition of devices to a booking (removing of devices is not supportet) or the registration of callbacks. For adding devices, the scope 'booking:use' is required.
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              -  type: object
                 description: Use this request for adding devices.
                 properties:
                    Locked:
                      type: boolean
                      description: Expresses whether the devices should be locked. Must match current status of booking.
                    Devices:
                     type: array
                     description: List of devices which should be added.
                     items:
                      $ref: '#/components/schemas/Device'
                    Execute_for:
                      description: Do the booking for the user in this field instead of the caller. For this to be accepted, caller must have the scope 'internal:execute_for'.
                      type: string
                      format: url
              - type: object
                description: Use this request for adding callbacks.
                properties:
                  Callback:
                    type: string
                    format: uri
                    description: Callback which should be called at changes.
        required: true
      responses:
        '200':
          description: The booking change was accepted. The booking status will display whether the booking of all devices was successful.
          content:
            application/json:
              schema:
                type: object
                required:
                  - BookingID
                properties:
                  BookingID:
                    type: string
                    format: uri
        '401':
          description: No authorisation header found.
        '403':
          description: >-
            Caller is not allowed to call this method. Usually, caller is missing required scopes.
        '404':
          description: Request contains unknown booking ID.
        '423':
          description: >-
            The booking 'locked' status and the requested locked status do not match.
        '500':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
                description: Error description
        '503':
          description: >-
            Service is unable to respond in time, possibly overloaded. Try again in a few minutes.
    delete:
      operationId: 'deleteBooking'
      security:
        - JWT:
          - booking
          - booking:use
      parameters:
        - $ref: '#/components/parameters/ID'
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
        - booking-frontend
      summary: Cancels a booking, as long as the booking was originally done by you.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                Execute_for:
                  description: Do the booking for the user in this field instead of the caller. For this to be accepted, caller must have the scope 'internal:execute_for'.
                  type: string
                  format: url
      responses:
        '200':
          description: >-
            The booking was cancelled. All associated devices were released.
        '401':
          description: No authorisation header found.
        '403':
          description: >-
            Caller is not allowed to call this method. Usually, caller is missing required scopes.
        '404':
          description: Request contains unknown booking ID.
        '423':
          description: >-
            The booking is currently locked, deletion not possible.
        '500':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
                description: Error description
        '503':
          description: >-
            Service is unable to respond in time, possibly overloaded. Try again in a few minutes.
    get:
      operationId: 'getBooking'
      security:
        - JWT:
          - booking
          - booking:use
      parameters:
        - $ref: '#/components/parameters/ID'
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
      - booking-frontend
      summary: >-
        Returns whether a list of devices is currently booked for a user.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                Execute_for:
                  description: Do the booking for the user in this field instead of the caller. For this to be accepted, caller must have the scope 'internal:execute_for'.
                  type: string
                  format: url
      responses:
        '200':
          description: Returns the current booking.
          content:
            application/json:
              schema:
                type: object
                required:
                 - Booking
                 - Locked
                properties:
                  Booking:
                    $ref: '#/components/schemas/Booking'
                  Locked:
                    type: boolean
                    description: Shows if the booking is in a locked status.
        '401':
          description: No authorisation header found.
        '403':
          description: >-
            Caller is not allowed to call this method. Usually, caller is missing required scopes.
        '404':
          description: Request contains unknown ID
        '500':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
                description: Error code
        '503':
          description: >-
            Service is unable to respond in time, possibly overloaded. Try again in a few minutes.
  /booking/{ID}/destroy:
    delete:
      operationId: 'destroyBooking'
      security:
        - JWT:
          - booking
          - booking:destroy
      parameters:
        - $ref: '#/components/parameters/ID'
          name: ID
          schema:
            type: string
          required: true
          description: ID of Booking
      tags:
        - booking-frontend
      summary: Allows selected persons (like lab manager) to remove a user booking. To avoid mistakes, this is a different path than normal delete.
      responses:
        '200':
          description: >-
            The booking was cancelled. All associated devices were released.
        '401':
          description: No authorisation header found.
        '403':
          description: >-
            Caller is not allowed to call this method. Usually, caller is missing required scopes.
        '404':
          description: Request contains unknown booking ID.
        '423':
          description: >-
            The booking is currently locked, deletion not possible.
        '500':
          description: >-
            Request could not be answered. An error string containing the reason
            will be returned.
          content:
            application/json:
              schema:
                type: string
                description: Error description
        '503':
          description: >-
            Service is unable to respond in time, possibly overloaded. Try again in a few minutes.
